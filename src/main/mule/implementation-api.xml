<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="Product-implementation-apiSub_Flow" doc:id="b02d984c-1853-4cf5-8bf0-98cbd4768b1f" >
		<http:request method="GET" doc:name="Request" doc:id="8397882e-171d-4296-812d-6371442ac5c0" config-ref="HTTP_Request_configuration" path="/v3/get-details">
			<http:headers><![CDATA[#[output application/java
---
{
	"X-Rapidapi-Host" : p('X-Rapidapi-Host'),
	"X-Rapidapi-Key" :  p('X-Rapidapi-Key'),
	"Host" : p('Host')
}]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
---
{
	"usItemId" : attributes.queryParams.usItemId
}]]]></http:query-params>
		</http:request>
		<choice doc:name="Choice" doc:id="558d1ae7-6519-412d-8d7b-3d6e62abab1d" >
			<when expression='#[! isEmpty(payload.data.product)]'>
				<ee:transform doc:name="Product Details payload" doc:id="976c1ee8-8f88-485a-a278-1f7435325d32">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<ee:transform doc:name="ProductDetails Field values as Variables" doc:id="a7a2ad62-6b1b-42a0-9ba9-4ca727952f6b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="Orderid"><![CDATA[%dw 2.0
output application/json
---
payload.data.product.usItemId]]></ee:set-variable>
				<ee:set-variable variableName="productTypeId"><![CDATA[%dw 2.0
output application/json
---
payload.data.product.productTypeId]]></ee:set-variable>
				<ee:set-variable variableName="quantity"><![CDATA[%dw 2.0
output application/java
---
payload.data.product.orderLimit]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="324b8da0-6788-497c-a56c-adf92b7fe6e3" message="Get product Details flow has ended successfully and moving to get store detail flow" />
				<flow-ref doc:name="Flow Reference" doc:id="e8e675be-75a0-4d18-bf0f-18cfbeea84be" name="Store-implementation-api-storeFlow" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="10f7f1f2-4edc-48ca-a99a-2df201c92fd3" message="User has entered invalid input. Flow is going to terminate."/>
				<raise-error doc:name="Raise error" doc:id="5cc21082-b6ec-41a0-a5e8-7f242758f36d" type="INPUT:INVALID_DATA" description="Please enter the valid OrderId"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="Store-implementation-api-storeFlow" doc:id="caaa090f-4f75-4516-b8c6-9071434b07c7" >
		<http:request method="GET" doc:name="Request" doc:id="093962cc-9869-468d-8c21-67d04f7e5954" config-ref="HTTP_Request_configuration_store" path="/list">
			<http:headers ><![CDATA[#[output application/java
---
{
	"X-RapidAPI-Host" : p('X-Rapidapi-Host'),
	"Host" : p('Host'),
	"X-RapidAPI-Key" : p('X-Rapidapi-Key')
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"postalCode" : payload.data.product.location.postalCode
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Store Detail Payload" doc:id="8d5bc2ab-837c-41a2-a40d-f9d616842917" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Store Details Field Values as Variable" doc:id="ce361843-995f-4a2b-a99a-53df90444cf2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="storeId" ><![CDATA[%dw 2.0
output application/json
---
payload.data.storesBySearchTerm.stores[0].id]]></ee:set-variable>
				<ee:set-variable variableName="storeName" ><![CDATA[%dw 2.0
output application/json
---
payload.data.storesBySearchTerm.stores[0].displayName]]></ee:set-variable>
				<ee:set-variable variableName="storeAddress" ><![CDATA[%dw 2.0
var newpayload =(payload.data.storesBySearchTerm.stores[0].address)
output application/json
---
newpayload.address ++ "," ++ newpayload.city++","++ newpayload.state ++"," ++  newpayload.country ++"("++ newpayload.postalCode ++ ")"]]></ee:set-variable>
				<ee:set-variable variableName="storeDistance" ><![CDATA[%dw 2.0
output application/json
---
payload.data.storesBySearchTerm.stores[0].distance]]></ee:set-variable>
				<ee:set-variable variableName="storeContactNumber" ><![CDATA[%dw 2.0
output application/json
---
"Not Present"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e294df26-9c17-4901-942e-ca098537c3cf" message='Get Store Details flow has completed successfully and moving to database implementation flow'/>
		<flow-ref doc:name="Flow Reference" doc:id="ffa0b2d3-80dc-4a72-b225-7ebd98d77abe" name="database-implementation-apiSub_Flow"/>
		<set-payload value='#["Your order will be delivered at "++ vars.storeName]' doc:name="Set Payload" doc:id="ab25ebe2-7c6f-4e2a-a4e3-78b557512602" />
	</sub-flow>
	<sub-flow name="database-implementation-apiSub_Flow" doc:id="1f096bf3-f88a-46f6-bb97-9ed19e8ab016" >
		<db:insert doc:name="Insert into testdbc45" doc:id="e7332456-ac56-4710-b8c0-3e06156a2583" config-ref="Database_Config">
			<db:sql><![CDATA[insert into testdbc45.walmartstore (order_id,store_id,store_name,store_address,store_distance,store_contact_number,product_type_id,quantity) values (:order_id,:store_id,:store_name,:store_address,:store_distance,:store_contact_number,:product_type_id,:quantity)]]></db:sql>
			<db:input-parameters><![CDATA[#[{
 "order_id":vars.Orderid,
 "store_id":vars.storeId,
 "store_name":vars.storeName,
 "store_address":vars.storeAddress,
 "store_distance":vars.storeDistance,
 "store_contact_number":vars.storeContactNumber,
 "product_type_id":vars.productTypeId,
 "quantity":vars.quantity
 }]]]></db:input-parameters>
		</db:insert>
	</sub-flow>
</mule>
